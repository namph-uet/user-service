syntax = "proto3";
option java_multiple_files = true;
option java_generic_services = true;
option java_package = "web.service.user.grpc";

message RegistrationRequestGrpc{
  string email = 1;
  string password = 2;
  string name = 3;
}
message RegistrationResponseGrpc{
  string email = 1;
  string status = 2;
}
message ConfirmEmailRequest{
  string token = 1;
}
message ConfirmEmailResponse{
  string status = 1;
  string email = 2;
}
message PasswordResetRequest{
  string email = 1;
}
message PasswordResetResponse{
  string status = 1;
  string email = 2;
}
message RegistrationInformationRequest{
  string email = 1;
  string userName = 2;
  string phone = 3;
}
message RegistrationInformationResponse{
  string status = 1;
}
message LoginRequest{
  string email = 1;
  string password = 2;
}
message LoginResponse{
  string status = 1;
  string token = 2;
  string username = 3;
  string userId = 4;
}

message NewPasswordRequest{
  string token = 1;
  string newPassword = 2;
  string newPasswordConfirm = 3;
}

message NewPasswordResponse{
  string email = 1;
  string status = 2;
}

message VerificationResetPasswordTokenRequest{
  string token = 1;
}
message VerificationResetPasswordTokenResponse{
  string email = 1;
  string status = 2;
}

message GetEmailRequest {
  string token = 1;
}

message GetEmailResponse {
  string email = 1;
}

message ValidateTokenRequest {
  string email = 1;
  string token = 2;
}

message ValidateTokenResponse {
  bool status = 1;
}

message GetAllUserRequest {
  int32 page = 1;
}

message GetAllUserResponse {
  message UserGrpcModel {
    string id =1;
    string firstName = 2;
    string lastName = 3;
  }

  repeated UserGrpcModel allUser = 1;
}

message GetUserRequest {
  string userId = 1;
}

message GetUserResponse {
  string email = 1;
  string name = 2;
}

message ChangeUserNameRpcRequest {
  string username = 1;
  string userId = 2;
}

message ChangeUserNameRpcResponse {
  string status = 1;
}

message SaveUserAvatarRequest {
  string imageSource = 1;
  string userId = 2;
}

message SaveUserAvatarResponse {
  string status = 1;
}

message GetUserAvatarRequest {
  string userId = 1;
}

message GetUserAvatarResponse {
  string avatar = 1;
}

message AddNewImageRequest {
  string image = 1;
  string userId = 2;
}

message AddNewImageResponse {
  bool success = 1;
}

message GetUserInfoRequest {
  string userId = 1;
}

message GetUserInfoResponse {
  string userName = 1;
  string city = 2;
  string country = 3;
  string description = 4;
  string avatar = 5;
  repeated string following = 6;
  repeated string followers = 7;
  repeated UserPots pots = 8;
  string status = 9;
}

message UserPots {
  string potsId = 1;
  string image = 2;
}

message GetUserNameRequest {
  string userId = 1;
}

message GetUserNameResponse {
  string userName = 1;
}

service UserService{

  // create a new account, save new email, password and send verification email
  rpc Registration (RegistrationRequestGrpc) returns (RegistrationResponseGrpc);

  // login account
  rpc Login (LoginRequest) returns (LoginResponse);

  // Verify email
  rpc VerificationTokenRegistration (ConfirmEmailRequest) returns (ConfirmEmailResponse);

  // send reset password email
  rpc PasswordForgot(PasswordResetRequest) returns (PasswordResetResponse);

  // save new password
  rpc PasswordReset (NewPasswordRequest) returns (NewPasswordResponse);

  // register account's information
  rpc RegistrationInformation (RegistrationInformationRequest) returns (RegistrationInformationResponse);

  // verify reset password token
  rpc VerificationResetPasswordToken (VerificationResetPasswordTokenRequest)
      returns (VerificationResetPasswordTokenResponse);

  // gRPC Api

  // filter controller call to user service
  rpc GetEmailFromToken (GetEmailRequest) returns (GetEmailResponse);

  //validate toke
  rpc ValidateToken (ValidateTokenRequest) returns (ValidateTokenResponse);

  // get all user
  rpc GetAllUser (GetAllUserRequest) returns (GetAllUserResponse);

  //get user by userId
  rpc GetUser(GetUserRequest) returns (GetUserResponse);

  // change user's name
  rpc RenameUser(ChangeUserNameRpcRequest) returns (ChangeUserNameRpcResponse);

  // save source user's avatar to DB
  rpc SaveAvatar(SaveUserAvatarRequest) returns (SaveUserAvatarResponse);

  // get user avatar
  rpc getUserAvatar(GetUserAvatarRequest) returns (GetUserAvatarResponse);

  // user add image
  rpc addNewImage(AddNewImageRequest) returns (AddNewImageResponse);

  // get user information
  rpc getUserInfo(GetUserInfoRequest) returns (GetUserInfoResponse);

  // get user name
  rpc getUserName(GetUserNameRequest) returns (GetUserNameResponse);
}

